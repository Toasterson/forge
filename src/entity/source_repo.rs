//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.6

use super::sea_orm_active_enums::RecipeKind;
use super::sea_orm_active_enums::SourceRepoKind;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "source_repo")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub name: String,
    pub url: String,
    pub repo_kind: SourceRepoKind,
    pub recipe_kind: RecipeKind,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::job::Entity")]
    Job,
    #[sea_orm(has_many = "super::source_to_gate_record::Entity")]
    SourceToGateRecord,
}

impl Related<super::job::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Job.def()
    }
}

impl Related<super::source_to_gate_record::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SourceToGateRecord.def()
    }
}

impl Related<super::gate::Entity> for Entity {
    fn to() -> RelationDef {
        super::source_to_gate_record::Relation::Gate.def()
    }
    fn via() -> Option<RelationDef> {
        Some(
            super::source_to_gate_record::Relation::SourceRepo
                .def()
                .rev(),
        )
    }
}

impl ActiveModelBehavior for ActiveModel {}
